<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icss.project.biz.mapper.EvaluateMapper">

    <resultMap type="Evaluate" id="EvaluateResult">
        <result property="id"    column="id"    />
        <result property="title"    column="title"    />
        <result property="name"    column="name"    />
        <result property="address"    column="address"    />
        <result property="num"    column="num"    />
        <result property="status"    column="status"    />
        <result property="date1"    column="date1"    />
        <result property="field1"    column="field1"    />
        <result property="field2"    column="field2"    />
        <result property="field3"    column="field3"    />
        <result property="field4"    column="field4"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectEvaluateVo">
        select id, title, name, address, num, status, date1, field1, field2, field3, field4, del_flag, create_by, create_time, update_by, update_time, remark from evaluate
    </sql>

    <select id="selectEvaluateList" parameterType="Evaluate" resultMap="EvaluateResult">
        <include refid="selectEvaluateVo"/>
        <where>
            <if test="title != null  and title != ''"> and title = #{title}</if>
            <if test="num!=null and num!=''">and num=#{num}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>

        </where>
    </select>

    <select id="selectEvaluateById" parameterType="Long" resultMap="EvaluateResult">
        <include refid="selectEvaluateVo"/>
        where id = #{id}
    </select>

    <insert id="insertEvaluate" parameterType="Evaluate" useGeneratedKeys="true" keyProperty="id">
        insert into evaluate
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null and title != ''">title,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="address != null and address != ''">address,</if>
            <if test="num != null">num,</if>
            <if test="status != null">status,</if>
            <if test="date1 != null">date1,</if>
            <if test="field1 != null">field1,</if>
            <if test="field2 != null">field2,</if>
            <if test="field3 != null">field3,</if>
            <if test="field4 != null">field4,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null and title != ''">#{title},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="address != null and address != ''">#{address},</if>
            <if test="num != null">#{num},</if>
            <if test="status != null">#{status},</if>
            <if test="date1 != null">#{date1},</if>
            <if test="field1 != null">#{field1},</if>
            <if test="field2 != null">#{field2},</if>
            <if test="field3 != null">#{field3},</if>
            <if test="field4 != null">#{field4},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateEvaluate" parameterType="Evaluate">
        update evaluate
        <trim prefix="SET" suffixOverrides=",">
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="address != null and address != ''">address = #{address},</if>
            <if test="num != null">num = #{num},</if>
            <if test="status != null">status = #{status},</if>
            <if test="date1 != null">date1 = #{date1},</if>
            <if test="field1 != null">field1 = #{field1},</if>
            <if test="field2 != null">field2 = #{field2},</if>
            <if test="field3 != null">field3 = #{field3},</if>
            <if test="field4 != null">field4 = #{field4},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEvaluateById" parameterType="Long">
        delete from evaluate where id = #{id}
    </delete>

    <delete id="deleteEvaluateByIds" parameterType="String">
        delete from evaluate where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
